{
	"env": {
		"browser": true,
		"node": true
	},

	// Use the power of babel for parsing.
	"parser": "babel-eslint",

	"plugins": [
		// Include lint rules for JSX
		"react"
	],

	"rules": {

		//
		"brace-style": [2, "1tbs"],

		//
		"default-case": 2,

		//
		"camelcase": 2,

		//
		"consistent-this": [2, "_this"],

		//
		"curly": 2,

		//
		"dot-notation": 0,

		//
		"eol-last": 2,

		//
		"func-names": 2,

		//
		"func-style": [2, "declaration"],

		//
		"guard-for-in": 2,

		// Enforce consistent styling on object literal keys; so
		// foo: bar is good, foo :bar is bad.
		"key-spacing": [2, { "beforeColon": false, "afterColon": true }],

		//
		"new-cap": 0,

		//
		"no-floating-decimal": 2,

		//
		"no-lonely-if": 2,

		//
		"no-mixed-spaces-and-tabs": [2, true],

		//
		"no-multiple-empty-lines": 2,

		//
		"no-nested-ternary": 2,

		//
		"no-spaced-func": 2,

		//
		"no-use-before-define": 2,

		//
		"no-undefined": 2,

		// foo
		"no-underscore-dangle": 0,

		// would much prefer "tabs"
		"indent": [2, "tab"],

		// faster to type
		"quotes": [2, "single"],

		//
		"radix": 2,

		// This is not necessary with ES6 classes since the display name comes
		// from the class name.
		"react/display-name": 0,

		// May as well have consistency between JavaScript quotes and JSX ones.
		"react/jsx-quotes": [2, "single"],

		//
		"react/jsx-no-undef": 2,

		//
		"react/jsx-sort-props": 0,

		//
		"react/jsx-uses-vars": 2,

		//
		"react/no-multi-comp": 2,

		//
		"react/prop-types": 0,

		//
		"react/wrap-multilines": 0,

		//
		"space-after-keywords": [2, "always"],

		//
		"spaced-line-comment": 2,

		//
		"strict": 0,

		//
		"valid-jsdoc": [2, {
			"prefer": {
				"return": "returns"
			}
		}],

		//
		"wrap-iife": 2,

		//
		"yoda": [0, "always"]
	}
}
